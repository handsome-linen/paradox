% Uptake Data Science Case Study
% Mami Saito
% 10/8/2020

clear
clc
close all

%% csv load
revenue = readtable('revenue.csv'); % 315 by 2
% 1st col - given site  (e.g. site_1, site_2, ...)
% 2nd col - anticipated revenue generated by a single wind turbine @ a
%           given site, assuming no failure occurs. This is the same 
%           for each turbine @ a given site

testing = readtable('testing.csv'); % 46610 by 175

training = readtable('training.csv'); % 11652 by 176

weather = readtable('weather.csv'); % 315 by 6
% 1st col - given site  (e.g. site_1, site_2, ...)
% 2nd col - high_temp: Average high in degrees F
% 3rd col - low_temp: Average low in degrees F
% 4th col - wind_speed: Average wind speed in m/s
% 5th col - precipitation (TRUE, FALSE)
% 6th col - lightning_prob (Low, High, NA)

%% Preprocess training data
% sort training by site
tblSite = sortrows(training,175);

% sort tblSite by status
tblStatus = sortrows(tblSite,173); % 202 failed turbine

% sensor_8 (1)
s8nan = sum(isnan(table2array(tblStatus(:,8)))); % 840 NaN
s8zero = length(find(table2array(tblStatus(:,8)) == 0)); %  24 zero

% sensor_21 (2)
s21emp = length(find(cellfun(@isempty,tblStatus{:,21}))); % 245 empty

% sensor_87 (3)
s87nan = sum(isnan(table2array(tblStatus(:,87)))); % 129 NaN
s87zero = length(find(table2array(tblStatus(:,87)) == 0)); % 5958 zero

% sensor_97 (4)
s97emp = length(find(cellfun(@isempty,tblStatus{:,97}))); % 19 empty

% sensor_140 (5)
s140nan = sum(isnan(table2array(tblStatus(:,140)))); % 121 NaN
s140zero = length(find(table2array(tblStatus(:,140)) == 0)); % 24 zero

% sensor_167 (6)
s167nan = sum(isnan(table2array(tblStatus(:,167)))); % 129 NaN
s167zero = length(find(table2array(tblStatus(:,167)) == 0)); % 1866 zero

% create table with above sensors
sixSensors = tblStatus(:,[8 21 87 97 140 167 173]);

% remove NaN & empty for sensor_8, 21, 87, 97, 140, 167
r8 = find(isnan(table2array(sixSensors(:,1))));
for i = length(r8):-1:1
    sixSensors(r8(i),:) = [];
end
r21 = find(cellfun(@isempty,sixSensors{:,2}));
for i = length(r21):-1:1
    sixSensors(r21(i),:) = [];
end
r87 = find(isnan(table2array(sixSensors(:,3))));
for i = length(r87):-1:1
    sixSensors(r87(i),:) = [];
end
r97 = find(cellfun(@isempty,sixSensors{:,4}));
for i = length(r97):-1:1
    sixSensors(r97(i),:) = [];
end
r140 = find(isnan(table2array(sixSensors(:,5))));
for i = length(r140):-1:1
    sixSensors(r140(i),:) = [];
end
r167 = find(isnan(table2array(sixSensors(:,6))));
for i = length(r167):-1:1
    sixSensors(r167(i),:) = []; % 10450 rows after this
end

% remove zero
noZero = sixSensors;
z87 = find(table2array(noZero(:,3)) == 0);
for i = length(z87):-1:1
    noZero(z87(i),:) = []; % 4875 rows after this 
end
z8 = find(table2array(noZero(:,1)) == 0);
for i = length(z8):-1:1
    noZero(z8(i),:) = [];
end
% sensor_140 no 0 @ this point
z167 = find(table2array(noZero(:,6)) == 0);
for i = length(z167):-1:1
    noZero(z167(i),:) = []; % 3963 rows after this 
end

% visualize
% figure
% plot(table2array(noZero(1:80,1)),table2array(noZero(1:80,3)),'ko')
% hold on
% plot(table2array(noZero(81:end,1)),table2array(noZero(81:end,3)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(noZero(1:80,1)),table2array(noZero(1:80,5)),'ko')
% hold on
% plot(table2array(noZero(81:end,1)),table2array(noZero(81:end,5)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(noZero(1:80,1)),table2array(noZero(1:80,6)),'ko')
% hold on
% plot(table2array(noZero(81:end,1)),table2array(noZero(81:end,6)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(noZero(1:80,3)),table2array(noZero(1:80,5)),'ko')
% hold on
% plot(table2array(noZero(81:end,3)),table2array(noZero(81:end,5)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(noZero(1:80,3)),table2array(noZero(1:80,6)),'ko')
% hold on
% plot(table2array(noZero(81:end,3)),table2array(noZero(81:end,6)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(noZero(1:80,5)),table2array(noZero(1:80,6)),'ko')
% hold on
% plot(table2array(noZero(81:end,5)),table2array(noZero(81:end,6)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])

% remove outliers
ppdData = noZero;
o8 = find(isoutlier(ppdData(:,1),'mean'));
for i = length(o8):-1:1
    ppdData(o8(i),:) = [];
end
o87 = find(isoutlier(table2array(ppdData(:,3)),'mean'));
for i = length(o87):-1:1
    ppdData(o87(i),:) = [];
end
o140 = find(isoutlier(ppdData(:,5),'mean'));
for i = length(o140):-1:1
    ppdData(o140(i),:) = [];
end
o167 = find(isoutlier(table2array(ppdData(:,6)),'mean'));
for i = length(o167):-1:1
    ppdData(o167(i),:) = []; % 3795 rows after this
end

% visualize again
% figure
% plot(table2array(ppdData(1:66,1)),table2array(ppdData(1:66,3)),'ko')
% hold on
% plot(table2array(ppdData(67:end,1)),table2array(ppdData(67:end,3)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(ppdData(1:66,1)),table2array(ppdData(1:66,5)),'ko')
% hold on
% plot(table2array(ppdData(67:end,1)),table2array(ppdData(67:end,5)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(ppdData(1:66,1)),table2array(ppdData(1:66,6)),'ko')
% hold on
% plot(table2array(ppdData(67:end,1)),table2array(ppdData(67:end,6)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(ppdData(1:66,3)),table2array(ppdData(1:66,5)),'ko')
% hold on
% plot(table2array(ppdData(67:end,3)),table2array(ppdData(67:end,5)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(ppdData(1:66,3)),table2array(ppdData(1:66,6)),'ko')
% hold on
% plot(table2array(ppdData(67:end,3)),table2array(ppdData(67:end,6)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])
% figure
% plot(table2array(ppdData(1:66,5)),table2array(ppdData(1:66,6)),'ko')
% hold on
% plot(table2array(ppdData(67:end,5)),table2array(ppdData(67:end,6)),'b*')
% set(gcf, 'units','normalized','outerposition',[0 0 1 1])

% 'failure' = 1 & 'no_failure' = 0
s1 = 'failure';
for i = 1:size(ppdData,1)
    ppdData{i,8} = strcmp(s1,char(ppdData{i,7}));
end

%% Treebagging to create model
X = [ppdData(:,1) table2array(ppdData(:,2)) ppdData(:,3) table2array(ppdData(:,4)) ppdData(:,[5 6])];
Y = table2array(ppdData(:,8));
Mdl = TreeBagger(20,X,Y,'OOBPrediction','on','Method','classification');
oobErrorBaggedEnsemble = oobError(Mdl);
accuracy = 100*(1 - min(oobErrorBaggedEnsemble));

%% Predict with testing data 
% sort testing by site
tblTest = sortrows(testing,174);

% create test table with sensors used for training
tblSensors = tblTest(:,[8 21 87 97 140 167 175]);

% predict
testData = [tblSensors(:,1) table2array(tblSensors(:,2)) tblSensors(:,3) table2array(tblSensors(:,4)) tblSensors(:,[5 6])];
% for i = 1:size(testData,1)
%     predicted(i,1) = Mdl.predict(testData(i,:));
% end